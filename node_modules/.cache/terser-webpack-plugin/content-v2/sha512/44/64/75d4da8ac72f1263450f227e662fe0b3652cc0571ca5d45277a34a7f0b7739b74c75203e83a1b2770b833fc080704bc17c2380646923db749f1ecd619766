{"map":"{\"version\":3,\"sources\":[\"/var/www/html/react-dev/src/components/About.js\",\"/var/www/html/react-dev/src/components/Header.js\",\"/var/www/html/react-dev/src/components/TextToUpper.js\",\"/var/www/html/react-dev/src/App.js\",\"/var/www/html/react-dev/src/reportWebVitals.js\",\"/var/www/html/react-dev/src/index.js\"],\"names\":[\"About\",\"myStyle\",\"setMyStyle\",\"useState\",\"color\",\"backgroundColor\",\"btntext\",\"setBtnText\",\"React\",\"createElement\",\"className\",\"id\",\"style\",\"type\",\"data-bs-toggle\",\"data-bs-target\",\"aria-expanded\",\"aria-controls\",\"tabIndex\",\"aria-labelledby\",\"data-bs-parent\",\"onClick\",\"toggleStyle\",\"Header\",\"props\",\"mode\",\"href\",\"aria-label\",\"aria-current\",\"toggleMode\",\"htmlFor\",\"TextToUpper\",\"Upper\",\"setUpper\",\"Fragment\",\"heading\",\"value\",\"onChange\",\"e\",\"target\",\"name\",\"rows\",\"cols\",\"handleOnUpper\",\"UpperText\",\"toUpperCase\",\"handleOnLower\",\"LowerText\",\"toLowerCase\",\"length\",\"split\",\"App\",\"setMode\",\"alert\",\"setAlert\",\"showAlert\",\"message\",\"msg\",\"setTimeout\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from 'react'\\n\\nexport default function About() {\\n\\n    const [myStyle, setMyStyle] = useState({\\n        color: \\\"black\\\",\\n        backgroundColor: \\\"white\\\"\\n    });\\n\\n    const [btntext, setBtnText] = useState(\\\"Enable Dark Mode\\\");\\n\\n    const toggleStyle = () => {\\n        if (myStyle.color === 'black') {\\n            setMyStyle({\\n                color: \\\"white\\\",\\n                backgroundColor: \\\"black\\\"\\n            })\\n            setBtnText(\\\"Enable Light Mode\\\");\\n        } else {\\n            setMyStyle({\\n                color: \\\"black\\\",\\n                backgroundColor: \\\"white\\\"\\n            })\\n            setBtnText(\\\"Enable Dark Mode\\\");\\n        }\\n    }\\n\\n    return (\\n        <div className='container my-3'>\\n            <h2>About Us</h2>\\n            <div className=\\\"accordion\\\" id=\\\"accordionExample\\\">\\n                <div className=\\\"accordion-item\\\">\\n                    <h2 className=\\\"accordion-header\\\" id=\\\"headingOne\\\">\\n                        <button className=\\\"accordion-button\\\" style={myStyle} type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#collapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseOne\\\" tabIndex={0} >\\n                            Accordion Item #1\\n                        </button>\\n                    </h2>\\n                    <div id=\\\"collapseOne\\\" className=\\\"accordion-collapse collapse show\\\" aria-labelledby=\\\"headingOne\\\" data-bs-parent=\\\"#accordionExample\\\">\\n                        <div className=\\\"accordion-body\\\" style={myStyle}>\\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\\n                        </div>\\n                    </div>\\n                </div>\\n                <div className=\\\"accordion-item\\\">\\n                    <h2 className=\\\"accordion-header\\\" id=\\\"headingTwo\\\">\\n                        <button className=\\\"accordion-button collapsed\\\" style={myStyle} type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#collapseTwo\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseTwo\\\" tabIndex={1}>\\n                            Accordion Item #2\\n                        </button>\\n                    </h2>\\n                    <div id=\\\"collapseTwo\\\" className=\\\"accordion-collapse collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-bs-parent=\\\"#accordionExample\\\">\\n                        <div className=\\\"accordion-body\\\" style={myStyle}>\\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\\n                        </div>\\n                    </div>\\n                </div>\\n                <div className=\\\"accordion-item\\\">\\n                    <h2 className=\\\"accordion-header\\\" id=\\\"headingThree\\\">\\n                        <button className=\\\"accordion-button collapsed\\\" style={myStyle} type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#collapseThree\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseThree\\\" tabIndex={2}>\\n                            Accordion Item #3\\n                        </button>\\n                    </h2>\\n                    <div id=\\\"collapseThree\\\" className=\\\"accordion-collapse collapse\\\" aria-labelledby=\\\"headingThree\\\" data-bs-parent=\\\"#accordionExample\\\">\\n                        <div className=\\\"accordion-body\\\" style={myStyle}>\\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <button onClick={toggleStyle} type=\\\"button\\\" className=\\\"btn btn-primary my-3\\\">{btntext}</button>\\n        </div>\\n\\n    )\\n}\\n\",\"import React from 'react';\\n//import { Link } from 'react-router-dom';\\n\\nfunction Header(props) {\\n    return (\\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\\n            <div className=\\\"container\\\">\\n                {/* <Link className=\\\"navbar-brand\\\" to=\\\"/\\\">Logo</Link> */}\\n                <a className=\\\"navbar-brand\\\" href=\\\"\\\">Logo</a>\\n                <button\\n                    className=\\\"navbar-toggler\\\"\\n                    type=\\\"button\\\"\\n                    data-bs-toggle=\\\"collapse\\\"\\n                    data-bs-target=\\\"#navbarSupportedContent\\\"\\n                    aria-controls=\\\"navbarSupportedContent\\\"\\n                    aria-expanded=\\\"false\\\"\\n                    aria-label=\\\"Toggle navigation\\\"\\n                >\\n                    <span className=\\\"navbar-toggler-icon\\\"></span>\\n                </button>\\n                <div className=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n                    <ul className=\\\"navbar-nav me-auto mb-2 mb-lg-0\\\">\\n                        <li className=\\\"nav-item\\\">\\n                            {/* <Link className=\\\"nav-link active\\\" aria-current=\\\"page\\\" to=\\\"/\\\">\\n                                Home\\n                            </Link> */}\\n                            <a className=\\\"nav-link active\\\" aria-current=\\\"page\\\" href=\\\"\\\">\\n                                Home\\n                            </a>\\n                        </li>\\n                        <li className=\\\"nav-item\\\">\\n                            {/* <Link className=\\\"nav-link\\\" to=\\\"/about\\\">\\n                                About\\n                            </Link> */}\\n                            <a className=\\\"nav-link\\\" href=\\\"\\\">\\n                                About\\n                            </a>\\n                        </li>\\n                    </ul>\\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\\n                        <input\\n                            className=\\\"form-check-input\\\"\\n                            onClick={props.toggleMode}\\n                            type=\\\"checkbox\\\"\\n                            id=\\\"flexSwitchCheckDefault\\\"\\n                        />\\n                        <label className=\\\"form-check-label\\\" htmlFor=\\\"flexSwitchCheckDefault\\\">\\n                            Enable Dark Mode\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n        </nav>\\n    );\\n}\\n\\nexport default Header;\\n\",\"import React, { useState } from 'react'\\n\\nexport default function TextToUpper(props) {\\n    const handleOnUpper = () => {\\n        let UpperText = Upper.toUpperCase();\\n        setUpper(UpperText);\\n    }\\n    const handleOnLower = () => {\\n        let LowerText = Upper.toLowerCase();\\n        setUpper(LowerText);\\n    }\\n    const handleOnChange = (e) => {\\n        setUpper(e.target.value);\\n    }\\n\\n    const [Upper, setUpper] = useState('Enter');\\n    return (\\n        <>\\n            <div className=\\\"container\\\">\\n                <div className=\\\"form-floating my-3 mb-3\\\">\\n                    <h1>{props.heading}</h1>\\n                    <textarea id=\\\"textUpper\\\" value={Upper} onChange={handleOnChange} name=\\\"textUpper\\\" rows=\\\"8\\\" cols=\\\"100\\\" />\\n                </div>\\n                <button type=\\\"button\\\" onClick={handleOnUpper} className=\\\"btn btn-primary mx-1\\\">Text to UpperCase</button>\\n                <button type=\\\"button\\\" onClick={handleOnLower} className=\\\"btn btn-primary mx-2\\\">Text to UpperCase</button>\\n            </div>\\n            <div className='container my-3'>\\n                <h2>Word Counter</h2>\\n                Total Characters : {Upper.length}\\n                <br />\\n                Total Words : {Upper.split(\\\" \\\").length}\\n            </div>\\n            <div className='container my-3'>\\n                <h2>Text Preview</h2>\\n                {Upper}\\n            </div>\\n        </>\\n    )\\n}\\n\",\"// App.js\\n\\nimport './App.css';\\nimport About from './components/About';\\n//import Alert from './components/Alert';\\nimport Header from './components/Header';\\nimport TextToUpper from './components/TextToUpper';\\nimport React, { useState } from 'react';\\n//import { BrowserRouter, Routes, Route } from 'react-router-dom';\\n\\nfunction App() {\\n  const [mode, setMode] = useState('light');\\n  const [alert, setAlert] = useState(null);\\n\\n  const showAlert = (message, type) => {\\n    setAlert({\\n      msg: message,\\n      type: type\\n    });\\n    setTimeout(() => {\\n      setAlert(null);\\n    }, 1000);\\n  };\\n\\n  const toggleMode = () => {\\n    if (mode === 'light') {\\n      setMode('dark');\\n      showAlert(\\\"Dark Mode has been enabled!\\\", \\\"success\\\");\\n    } else {\\n      setMode('light');\\n      showAlert(\\\"Light Mode has been enabled!\\\", \\\"success\\\");\\n    }\\n  };\\n\\n  return (\\n    <>\\n      {/* // <BrowserRouter>\\n    //   <Header mode={mode} toggleMode={toggleMode} />\\n    //   <Alert alert={alert} />\\n    //   <div className=\\\"container my-3\\\">\\n    //     <Routes>\\n    //       <Route path=\\\"/\\\" element={<TextToUpper heading=\\\"Text to UpperCase\\\" />} />\\n    //       <Route path=\\\"/about\\\" element={<About />} />\\n    //     </Routes>\\n    //   </div>\\n    // </BrowserRouter> */}\\n      <Header mode={mode} toggleMode={toggleMode} />\\n      <div className=\\\"container my-3\\\">\\n        <TextToUpper heading=\\\"Text to UpperCase\\\" />\\n        <About />\\n      </div>\\n    </>\\n  );\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,a,t){},13:function(e,a,t){},14:function(e,a,t){\"use strict\";t.r(a);var n=t(0),l=t.n(n),o=t(2),c=t.n(o);t(12),t(13);function r(){const[e,a]=Object(n.useState)({color:\"black\",backgroundColor:\"white\"}),[t,o]=Object(n.useState)(\"Enable Dark Mode\");return l.a.createElement(\"div\",{className:\"container my-3\"},l.a.createElement(\"h2\",null,\"About Us\"),l.a.createElement(\"div\",{className:\"accordion\",id:\"accordionExample\"},l.a.createElement(\"div\",{className:\"accordion-item\"},l.a.createElement(\"h2\",{className:\"accordion-header\",id:\"headingOne\"},l.a.createElement(\"button\",{className:\"accordion-button\",style:e,type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseOne\",\"aria-expanded\":\"true\",\"aria-controls\":\"collapseOne\",tabIndex:0},\"Accordion Item #1\")),l.a.createElement(\"div\",{id:\"collapseOne\",className:\"accordion-collapse collapse show\",\"aria-labelledby\":\"headingOne\",\"data-bs-parent\":\"#accordionExample\"},l.a.createElement(\"div\",{className:\"accordion-body\",style:e},l.a.createElement(\"strong\",null,\"This is the first item's accordion body.\"),\" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",l.a.createElement(\"code\",null,\".accordion-body\"),\", though the transition does limit overflow.\"))),l.a.createElement(\"div\",{className:\"accordion-item\"},l.a.createElement(\"h2\",{className:\"accordion-header\",id:\"headingTwo\"},l.a.createElement(\"button\",{className:\"accordion-button collapsed\",style:e,type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseTwo\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseTwo\",tabIndex:1},\"Accordion Item #2\")),l.a.createElement(\"div\",{id:\"collapseTwo\",className:\"accordion-collapse collapse\",\"aria-labelledby\":\"headingTwo\",\"data-bs-parent\":\"#accordionExample\"},l.a.createElement(\"div\",{className:\"accordion-body\",style:e},l.a.createElement(\"strong\",null,\"This is the second item's accordion body.\"),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",l.a.createElement(\"code\",null,\".accordion-body\"),\", though the transition does limit overflow.\"))),l.a.createElement(\"div\",{className:\"accordion-item\"},l.a.createElement(\"h2\",{className:\"accordion-header\",id:\"headingThree\"},l.a.createElement(\"button\",{className:\"accordion-button collapsed\",style:e,type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseThree\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseThree\",tabIndex:2},\"Accordion Item #3\")),l.a.createElement(\"div\",{id:\"collapseThree\",className:\"accordion-collapse collapse\",\"aria-labelledby\":\"headingThree\",\"data-bs-parent\":\"#accordionExample\"},l.a.createElement(\"div\",{className:\"accordion-body\",style:e},l.a.createElement(\"strong\",null,\"This is the third item's accordion body.\"),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",l.a.createElement(\"code\",null,\".accordion-body\"),\", though the transition does limit overflow.\")))),l.a.createElement(\"button\",{onClick:()=>{\"black\"===e.color?(a({color:\"white\",backgroundColor:\"black\"}),o(\"Enable Light Mode\")):(a({color:\"black\",backgroundColor:\"white\"}),o(\"Enable Dark Mode\"))},type:\"button\",className:\"btn btn-primary my-3\"},t))}var s=function(e){return l.a.createElement(\"nav\",{className:`navbar navbar-expand-lg navbar-${e.mode} bg-${e.mode}`},l.a.createElement(\"div\",{className:\"container\"},l.a.createElement(\"a\",{className:\"navbar-brand\",href:\"\"},\"Logo\"),l.a.createElement(\"button\",{className:\"navbar-toggler\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#navbarSupportedContent\",\"aria-controls\":\"navbarSupportedContent\",\"aria-expanded\":\"false\",\"aria-label\":\"Toggle navigation\"},l.a.createElement(\"span\",{className:\"navbar-toggler-icon\"})),l.a.createElement(\"div\",{className:\"collapse navbar-collapse\",id:\"navbarSupportedContent\"},l.a.createElement(\"ul\",{className:\"navbar-nav me-auto mb-2 mb-lg-0\"},l.a.createElement(\"li\",{className:\"nav-item\"},l.a.createElement(\"a\",{className:\"nav-link active\",\"aria-current\":\"page\",href:\"\"},\"Home\")),l.a.createElement(\"li\",{className:\"nav-item\"},l.a.createElement(\"a\",{className:\"nav-link\",href:\"\"},\"About\"))),l.a.createElement(\"div\",{className:`form-check form-switch text-${\"light\"===e.mode?\"dark\":\"light\"}`},l.a.createElement(\"input\",{className:\"form-check-input\",onClick:e.toggleMode,type:\"checkbox\",id:\"flexSwitchCheckDefault\"}),l.a.createElement(\"label\",{className:\"form-check-label\",htmlFor:\"flexSwitchCheckDefault\"},\"Enable Dark Mode\")))))};function i(e){const[a,t]=Object(n.useState)(\"Enter\");return l.a.createElement(l.a.Fragment,null,l.a.createElement(\"div\",{className:\"container\"},l.a.createElement(\"div\",{className:\"form-floating my-3 mb-3\"},l.a.createElement(\"h1\",null,e.heading),l.a.createElement(\"textarea\",{id:\"textUpper\",value:a,onChange:e=>{t(e.target.value)},name:\"textUpper\",rows:\"8\",cols:\"100\"})),l.a.createElement(\"button\",{type:\"button\",onClick:()=>{let e=a.toUpperCase();t(e)},className:\"btn btn-primary mx-1\"},\"Text to UpperCase\"),l.a.createElement(\"button\",{type:\"button\",onClick:()=>{let e=a.toLowerCase();t(e)},className:\"btn btn-primary mx-2\"},\"Text to UpperCase\")),l.a.createElement(\"div\",{className:\"container my-3\"},l.a.createElement(\"h2\",null,\"Word Counter\"),\"Total Characters : \",a.length,l.a.createElement(\"br\",null),\"Total Words : \",a.split(\" \").length),l.a.createElement(\"div\",{className:\"container my-3\"},l.a.createElement(\"h2\",null,\"Text Preview\"),a))}var d=function(){const[e,a]=Object(n.useState)(\"light\"),[t,o]=Object(n.useState)(null),c=(e,a)=>{o({msg:e,type:a}),setTimeout(()=>{o(null)},1e3)};return l.a.createElement(l.a.Fragment,null,l.a.createElement(s,{mode:e,toggleMode:()=>{\"light\"===e?(a(\"dark\"),c(\"Dark Mode has been enabled!\",\"success\")):(a(\"light\"),c(\"Light Mode has been enabled!\",\"success\"))}}),l.a.createElement(\"div\",{className:\"container my-3\"},l.a.createElement(i,{heading:\"Text to UpperCase\"}),l.a.createElement(r,null)))};var m=e=>{e&&e instanceof Function&&t.e(3).then(t.bind(null,15)).then(a=>{let{getCLS:t,getFID:n,getFCP:l,getLCP:o,getTTFB:c}=a;t(e),n(e),l(e),o(e),c(e)})};c.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(d,null))),m()},3:function(e,a,t){e.exports=t(14)}},[[3,1,2]]]);","extractedComments":[]}